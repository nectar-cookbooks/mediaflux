# Mediaflux 3.0 XODB database configuration.
#
# (Generated by the DaRIS chef recipe ...)

# Edit the directory containing the database, and uncomment
# the following line for the Mediaflux server to use the embedded
# Mediaflux XODB database engine. If commented, the system will
# use any other relational database that has been configured.
#

# Settings:
#
# Storage Settings:
# ----------------
#
#  db                - Database type and associated settings.
#                      Current supported types are:
#                         file
#
#   cfg              - Type specific settings.
#
#  
# File Type Database:
# ------------------
#
#   cfg - type file
#
#     dir            - The directory containing the database. If the path 
#                      starts with "volatile/" then the path is relative
#                      to the installation volatile directory.
#
#     name           - The name of the database - will create two
#                      files using that name:
#                         a. The database (<NAME>.db)
#                         b. The rollback transaction log <NAME>.log
#
#     page-cache     - A file type database uses an asynchronous page
#                      cache. Data is read/written in pages of a fixed
#                      size (16KB).
#
#       size         - The number of pages (16KB per page) that will
#                      be cached in memory. Needs only to be large
#                      enough to hold pages in a transaction, otherwise
#                      page swapping/overflow will occur. 
#
#
# Object Cache Settings:
# ---------------------
#
#   object-cache  
#  
#      query         - The cache containing compressed binary XML objects.
#                      When a direct object evaluation is required, this 
#                      cache is utilized. The larger the better, preferably
#                      larger than the total number of objects in the 
#                      database if possible. 
#
#                      The total amount of memory used will be a function of 
#                      the complexity of the objects. Typical objects consume
#                      a few hundred bytes or less.
#
#        size        - The number of compressed binary XML objects to 
#                      retain in memory for:
#                        a. Object-level query evaluation
#                        b. Tier-2 cache when deflated object not in tier-1
#                           (never there, or removed by JVM to free up memory).

xodb.configure \
    :db -type file < \
        :cfg -type file < \
            :dir <%= @mflux_home %>/volatile/database \
            :name mfluxdb \
            :page-cache < \
                :size 1000 \
            > \
	    :extent < \
	        :size 2048 \
	    > \
        > \
    > \
    :object-cache < \
        :query < \
            :size 1000000 \
        > \
    >
